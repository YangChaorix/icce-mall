{"ast":null,"code":"export default {\n  name: \"File\",\n  created() {\n    this.load();\n  },\n  data() {\n    return {\n      baseApi: this.$store.state.baseApi,\n      tableData: [],\n      total: 0,\n      pageSize: 5,\n      currentPage: 1,\n      fileName: '',\n      multipleSelection: []\n    };\n  },\n  methods: {\n    handleSizeChange(pageSize) {\n      this.pageSize = pageSize;\n      this.load();\n    },\n    handleCurrentPage(currentPage) {\n      this.currentPage = currentPage;\n      this.load();\n    },\n    handleSelectionChange(val) {\n      this.multipleSelection = val;\n    },\n    handleFileUploadSuccess() {\n      this.$message.success(\"上传成功\");\n      this.load();\n    },\n    handleEnable(row) {\n      this.request.get(\"/file/enable\", {\n        params: {\n          \"id\": row.id,\n          \"enable\": row.enable\n        }\n      }).then(res => {\n        if (res.code === '200') {\n          this.$message({\n            type: \"success\",\n            message: \"修改成功\",\n            duration: 3000\n          });\n          this.load();\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    load() {\n      this.request.get(\"/file/page\", {\n        params: {\n          pageNum: this.currentPage,\n          pageSize: this.pageSize,\n          fileName: this.fileName\n        }\n      }).then(res => {\n        if (res.code === '200') {\n          this.tableData = res.data.records;\n          for (let s of this.tableData) {\n            let size = s.size;\n            if (size < 1024) {\n              s.size = size + ' Kb';\n            } else if (size > 1024 && size < 1024 * 1024) {\n              s.size = (size / 1024).toFixed(2) + ' Mb';\n            } else {\n              s.size = size / 1024 / 1024 .toFixed(2) + ' Gb';\n            }\n          }\n          this.total = res.data.total;\n        }\n      });\n    },\n    search() {\n      this.currentPage = 1;\n      this.load();\n    },\n    reload() {\n      this.fileName = '';\n      this.load();\n    },\n    // //编辑\n    // handleEdit(row){\n    //   this.user = JSON.parse(JSON.stringify(row));\n    //   this.dialogTitle='编辑用户';\n    //   this.dialogFormVisible = true;\n    // },\n\n    //删除\n    handleDelete(id) {\n      this.$confirm('确认删除该文件吗?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        this.request.delete(\"/file/\" + id).then(res => {\n          if (res.code === '200') {\n            this.$message({\n              type: \"success\",\n              message: \"删除成功\",\n              duration: 3000\n            });\n            this.load();\n          } else {\n            this.$message.error(res.msg);\n          }\n        });\n      });\n    },\n    //批量删除\n    delBatch() {\n      let ids = this.multipleSelection.map(v => v.id);\n      this.$confirm('确认删除这些用户吗?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        this.request.post(\"/file/del/batch\", ids).then(res => {\n          if (res.code === '200') {\n            this.$message({\n              type: \"success\",\n              message: \"删除成功\",\n              duration: 3000\n            });\n            this.load();\n          } else {\n            this.$message.error(res.msg);\n          }\n        });\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","created","load","data","baseApi","$store","state","tableData","total","pageSize","currentPage","fileName","multipleSelection","methods","handleSizeChange","handleCurrentPage","handleSelectionChange","val","handleFileUploadSuccess","$message","success","handleEnable","row","request","get","params","id","enable","then","res","code","type","message","duration","error","msg","pageNum","records","s","size","toFixed","search","reload","handleDelete","$confirm","confirmButtonText","cancelButtonText","delete","delBatch","ids","map","v","post"],"sources":["src/views/manage/file/File.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"demo-input-size\">\r\n      <el-input placeholder=\"请输入文件名\" prefix-icon=\"iconfont icon-r-find\" style=\"width: 250px;padding-right: 5px\" v-model=\"fileName\"></el-input>\r\n      <el-button type=\"primary\" @click=\"search\">\r\n        \r\n        搜索\r\n      </el-button>\r\n      <el-button type=\"warning\" @click=\"reload\">\r\n        \r\n        重置\r\n      </el-button>\r\n\r\n    </div>\r\n    <!--          按钮栏-->\r\n    <div style=\"padding-top: 10px\">\r\n\r\n      <el-upload action=\"http://localhost:9191/file/upload\" :show-file-list=\"false\" :on-success=\"handleFileUploadSuccess\" style=\"display: inline-block\">\r\n        <el-button type=\"primary\" style=\"font-size: 18px;\"> 上传</el-button>\r\n      </el-upload>\r\n      <el-button type=\"danger\" @click=\"delBatch\" style=\"margin-left: 10px;font-size: 18px;\"> 批量删除</el-button>\r\n    </div>\r\n    <!--          表格-->\r\n    <el-table :data=\"tableData\" background-color=\"black\" @selection-change=\"handleSelectionChange\" >\r\n      <el-table-column type=\"selection\" ></el-table-column>\r\n      <el-table-column prop=\"name\" label=\"文件名\" ></el-table-column>\r\n      <el-table-column prop=\"type\" label=\"文件类型\" width=\"180\" ></el-table-column>\r\n      <el-table-column prop=\"size\" label=\"文件大小\" width=\"180\" ></el-table-column>\r\n      <el-table-column label=\"操作\" width=\"260\" fixed=\"right\">\r\n        <template slot-scope=\"scope\">\r\n\r\n<!--          下载-->\r\n          <a :href=\"baseApi + scope.row.url\">\r\n            <el-button\r\n              type=\"success\"\r\n              style=\"font-size: 18px;\"\r\n              >\r\n               下载\r\n            </el-button>\r\n          </a>\r\n<!--          删除-->\r\n          <el-button\r\n              type=\"danger\"\r\n              style=\"margin-left: 10px;font-size: 18px;\"\r\n              @click=\"handleDelete(scope.row.id)\">\r\n              \r\n              删除\r\n            </el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n    <div class=\"block\" style=\"flex: 0 0 auto\">\r\n      <el-pagination\r\n          :current-page=\"currentPage\"\r\n          :page-sizes=\"[3, 5, 8, 10]\"\r\n          :page-size=\"pageSize\"\r\n          layout=\"total, sizes, prev, pager, next, jumper\"\r\n          :total=\"total\"\r\n          @size-change=\"handleSizeChange\"\r\n          @current-change=\"handleCurrentPage\"\r\n      >\r\n      </el-pagination>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nexport default {\r\n  name: \"File\",\r\n  created() {\r\n    this.load();\r\n  },\r\n  data(){\r\n    return{\r\n      baseApi: this.$store.state.baseApi,\r\n      tableData: [],\r\n      total: 0,\r\n      pageSize: 5,\r\n      currentPage: 1,\r\n      fileName: '',\r\n\r\n      multipleSelection: []\r\n    }\r\n  },\r\n  methods:{\r\n    handleSizeChange(pageSize){\r\n      this.pageSize = pageSize;\r\n      this.load();\r\n    },\r\n    handleCurrentPage(currentPage){\r\n      this.currentPage = currentPage;\r\n      this.load();\r\n    },\r\n    handleSelectionChange(val){\r\n      this.multipleSelection = val\r\n    },\r\n    handleFileUploadSuccess() {\r\n      this.$message.success(\"上传成功\");\r\n      this.load();\r\n    },\r\n    handleEnable(row){\r\n      this.request.get(\"/file/enable\",{params:{\"id\": row.id, \"enable\": row.enable}}).then(res=>{\r\n        if(res.code==='200'){\r\n          this.$message({\r\n            type: \"success\",\r\n            message: \"修改成功\",\r\n            duration: 3000\r\n          });\r\n          this.load();\r\n        }else {\r\n          this.$message.error(res.msg);\r\n        }\r\n      })\r\n    },\r\n    load(){\r\n      this.request.get(\"/file/page\",{\r\n        params:{\r\n          pageNum: this.currentPage,\r\n          pageSize: this.pageSize,\r\n          fileName: this.fileName,\r\n        }\r\n      }).then(res=>{\r\n            if(res.code==='200'){\r\n              this.tableData = res.data.records;\r\n              for(let s of this.tableData){\r\n                let size = s.size;\r\n                if(size<1024){\r\n                  s.size = size+' Kb';\r\n                }else if(size >1024 && size < 1024*1024){\r\n                  s.size = (size / 1024).toFixed(2) +' Mb'\r\n                }else{\r\n                  s.size = size /1024/1024 .toFixed(2)+' Gb'\r\n                }\r\n              }\r\n              this.total = res.data.total;\r\n              \r\n            }\r\n          }\r\n      )\r\n    },\r\n    search(){\r\n      this.currentPage = 1;\r\n      this.load();\r\n    },\r\n    reload(){\r\n      this.fileName='';\r\n      this.load()\r\n    },\r\n    // //编辑\r\n    // handleEdit(row){\r\n    //   this.user = JSON.parse(JSON.stringify(row));\r\n    //   this.dialogTitle='编辑用户';\r\n    //   this.dialogFormVisible = true;\r\n    // },\r\n\r\n    //删除\r\n    handleDelete(id){\r\n      this.$confirm('确认删除该文件吗?', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(() => {\r\n        this.request.delete(\"/file/\"+id).then(res=>{\r\n          if(res.code==='200'){\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"删除成功\",\r\n              duration: 3000\r\n            });\r\n            this.load();\r\n          }else {\r\n            this.$message.error(res.msg);\r\n          }\r\n        })\r\n      })\r\n    },\r\n    //批量删除\r\n    delBatch(){\r\n      let ids = this.multipleSelection.map(v => v.id);\r\n      this.$confirm('确认删除这些用户吗?', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(() => {\r\n        this.request.post(\"/file/del/batch\",ids).then(res=>{\r\n          if(res.code==='200'){\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"删除成功\",\r\n              duration: 3000\r\n            });\r\n            this.load();\r\n          }else {\r\n            this.$message.error(res.msg);\r\n          }\r\n        })\r\n\r\n      })\r\n\r\n    }\r\n  },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}